{"version":3,"sources":["app.js","controllers/availability.controller.js","controllers/confirmed.controller.js","controllers/error.controller.js","controllers/reservation.controller.js","directives/reservation.directive.js","filters/reservation.filter.js","services/availability.service.js","functions.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["angular.module(\"App\", [\"ngLocale\", \"ui.bootstrap\"])\r\n    .run([\"$location\" , function($location) {\r\n        var color = $location.search().color;\r\n        if (color) {\r\n            var style = angular.element(\"<style type=\\\"text/css\\\">.bs-color { color: #\"+ color +\" !important; } .bs-bgm { background: #\"+ color +\" !important;color: #fff; } </style>\");\r\n            document.querySelector(\"head\").appendChild(style[0]);\r\n        }\r\n    }])\r\n    .run([\"$templateCache\", function($templateCache) {\r\n      $templateCache.put(\"template/datepicker/day.html\",\r\n        \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{::uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\r\n        \"  <thead>\\n\" +\r\n        \"    <tr class=\\\"nav\\\">\\n\" +\r\n        \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-left\\\"></i></button></th>\\n\" +\r\n        \"      <th colspan=\\\"{{::5 + showWeeks}}\\\"><button id=\\\"{{::uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm date-label\\\" ng-click=\\\"toggleMode()\\\" ng-disabled=\\\"datepickerMode === maxMode\\\" tabindex=\\\"-1\\\" style=\\\"width:100%;\\\"><strong>{{title}}</strong></button></th>\\n\" +\r\n        \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-right\\\"></i></button></th>\\n\" +\r\n        \"    </tr>\\n\" +\r\n        \"    <tr class=\\\"days\\\">\\n\" +\r\n        \"      <th ng-if=\\\"showWeeks\\\" class=\\\"text-center\\\"></th>\\n\" +\r\n        \"      <th ng-repeat=\\\"label in ::labels track by $index\\\" class=\\\"text-center\\\"><small aria-label=\\\"{{::label.full}}\\\">{{::label.abbr}}</small></th>\\n\" +\r\n        \"    </tr>\\n\" +\r\n        \"  </thead>\\n\" +\r\n        \"  <tbody>\\n\" +\r\n        \"    <tr ng-repeat=\\\"row in rows track by $index\\\">\\n\" +\r\n        \"      <td ng-if=\\\"showWeeks\\\" class=\\\"text-center h6\\\"><em>{{ weekNumbers[$index] }}</em></td>\\n\" +\r\n        \"      <td ng-repeat=\\\"dt in row track by dt.date\\\" class=\\\"text-center cell-btn\\\" role=\\\"gridcell\\\" id=\\\"{{::dt.uid}}\\\" ng-class=\\\"::dt.customClass\\\">\\n\" +\r\n        \"        <button type=\\\"button\\\" style=\\\"min-width:100%;\\\" class=\\\"btn btn-default btn-sm\\\" ng-class=\\\"{'btn-info': dt.selected, 'active bs-bgm': isActive(dt)}\\\" ng-click=\\\"select(dt.date)\\\" ng-disabled=\\\"dt.disabled\\\" tabindex=\\\"-1\\\" ng-if=\\\"!dt.secondary\\\"><span ng-class=\\\"::{'text-muted': dt.secondary, 'text-info': dt.current}\\\">{{::dt.label}}</span></button>\\n\" +\r\n        \"      </td>\\n\" +\r\n        \"    </tr>\\n\" +\r\n        \"  </tbody>\\n\" +\r\n        \"</table>\\n\" +\r\n        \"\");\r\n    }])\r\n    .config(function($provide) {\r\n        $provide.decorator('uibDatepickerDirective', ['$delegate',function($delegate) {\r\n            var directive = $delegate[0];\r\n\r\n            var link = directive.link;\r\n\r\n            directive.$$isolateBindings.monthChanged = {\r\n                attrName: \"monthChanged\",\r\n                mode: \"&\",\r\n                optional: true\r\n            };\r\n\r\n            directive.compile = function() {\r\n                return function(scope, element, attrs, ctrls) {\r\n                    link.apply(this, arguments);\r\n\r\n                    scope.$watch(function() {\r\n                       return ctrls[0].activeDate;\r\n                    }, function(newVal, oldVal) {\r\n                        if (scope.datepickerMode == 'day') {\r\n                            if (oldVal.getMonth() !== newVal.getMonth() || oldVal.getYear() !== newVal.getYear()) {\r\n                                var mDate = moment(newVal);\r\n                                var date = mDate.format(\"YYYY-MM-DD\");\r\n                                var month = mDate.format(\"MM\");\r\n                                var year = mDate.format(\"YYYY\");\r\n                                if (typeof scope.monthChanged == \"function\") {\r\n                                    scope.monthChanged({\"$date\": date, \"$month\": month, \"$year\": year, \"$instance\": scope.datepicker, \"$select\": scope.select});\r\n                                }\r\n                            }\r\n                        }\r\n                    }, true);\r\n                    \r\n                };\r\n            };\r\n            return $delegate;\r\n        }]);\r\n    });\r\n","angular.module(\"App\")\r\n    .controller(\"availabilityCtrl\", [\"$scope\", \"$q\", \"availabilityService\", \"utiles\", \"$window\", \"base_url\",\r\n        function(vm, $q, availabilityService, utiles, $window, base_url) {\r\n\r\n        vm.form = {};\r\n        vm.result = [];\r\n        vm.availability = {};\r\n        vm.loadingInfo = false;\r\n        vm.message = \"\";\r\n\r\n        vm.selectedPeople = {};\r\n        vm.selectedZone = {};\r\n        vm.selectedHour = {};\r\n        vm.selectedEvent= {};\r\n\r\n        vm.promotion = {};\r\n\r\n        vm.minDate = new Date();\r\n        vm.date = new Date();\r\n\r\n        /**\r\n         * Variables de apollo\r\n         */\r\n         var zoneColapse = true;\r\n         vm.case = 0;\r\n\r\n        /**\r\n         *  HTTP \r\n         */\r\n         vm.searchAvailability = function() {\r\n            var deferred = $q.defer();\r\n\r\n            vm.loadingInfo = true;\r\n            // vm.result.length = 0;\r\n            availabilityService.getAvailability(vm.availability)\r\n                .then(function(response) {\r\n                    vm.result = resultFormat(response.data.data);\r\n                    showResult();\r\n                    deferred.resolve(vm.result);\r\n                }).catch(function(error) {\r\n                    deferred.reject(\"Error en la busqueda de disponibilidad\");\r\n                    console.log(\"Error en la busqueda de disponibilidad\", error);\r\n                }).finally(function() {\r\n                    vm.loadingInfo = false;\r\n                    vm.infoAvailability = 'Reservaciones disponibles al ' + vm.infoDate + ' a las ' + vm.availability.hour.option_user + ' para ' + vm.availability.num_guests + ' personas.';\r\n                });\r\n\r\n             return deferred.promise;\r\n         };\r\n\r\n         vm.saveTemporalReserve = function(item) {\r\n             vm.loadingInfo = true;\r\n\r\n             availabilityService.saveTemporalReserve(item.form)\r\n                 .then(function(response) {\r\n                     var temp_token  = response.data.data.token;\r\n                     redirect(temp_token);\r\n                 }).catch(function(error) {\r\n                     alert(\"Ocurrio un problema al tratar de reservar, intentelo de nuevo.\");\r\n                     console.log(\"Error en la reserva temporal\", error);\r\n                 }).finally(function() {\r\n                     vm.loadingInfo = false;\r\n                 });\r\n         };\r\n        /**\r\n         * end HTTP\r\n         */\r\n        \r\n        var redirect = function(key) {\r\n            $window.location.href = base_url.get(\"/reserve?key=\" + key);\r\n        };\r\n\r\n        var showResult = function() {\r\n            $(\"#first\").fadeOut(100, function() {\r\n                $(\"#two\").fadeIn(100);\r\n            });\r\n            vm.case = 2;\r\n        };\r\n        \r\n        vm.returnSearch = function() {\r\n            $(\"#two\").fadeOut(100, function() {\r\n                $(\"#first\").fadeIn(100);\r\n            });\r\n            vm.case = 1;\r\n        };\r\n\r\n       /**\r\n        * Date picker filter\r\n        */\r\n        vm.disabled = function(date, mode){\r\n            if(! vm.daysDisabled ) return;\r\n            var isHoliday = false;\r\n            for(var i = 0; i < vm.daysDisabled.length ; i++) {\r\n              if(areDatesEqual(toDate(vm.daysDisabled[i]), date)){\r\n                isHoliday = true;\r\n              }\r\n            }\r\n\r\n            return ( mode === 'day' && isHoliday );\r\n        };\r\n\r\n        function areDatesEqual(date1, date2) {\r\n          return date1.setHours(0,0,0,0) === date2.setHours(0,0,0,0);\r\n        }\r\n\r\n        function toDate(date) {\r\n              return new Date(date.split(\"-\"));\r\n        }\r\n        /**\r\n         * END Date picker filter\r\n         */\r\n\r\n        /**\r\n         * Selects\r\n         */\r\n        \r\n        vm.zoneColapse = function(event) {\r\n            if (!zoneColapse) {\r\n                event.stopPropagation();\r\n            }\r\n        };\r\n\r\n        vm.selectPeople = function(guest) {\r\n            vm.availability.num_guests = guest.value;\r\n            vm.selectedPeople = guest;\r\n        };\r\n\r\n        vm.selectZone  = function(zone) {\r\n            vm.availability.zone_id = zone.id;\r\n            vm.selectedZone = zone; \r\n        };\r\n\r\n        vm.selectHour = function(hour, event) {\r\n            if (hour === null || hour === undefined) {\r\n                vm.availability.hour = {};\r\n                vm.selectedHour = {}; \r\n                vm.selectedEvent = {};\r\n            } else {\r\n                vm.availability.hour = hour;\r\n                vm.selectedHour = hour; \r\n\r\n                if (event === null || event === undefined) {\r\n                    if (hour.events) {\r\n                        if (hour.events.length) {\r\n                            vm.selectedEvent = hour.events[0];\r\n                        } else {\r\n                            vm.selectedEvent = {};\r\n                        }\r\n                    } else {\r\n                        vm.selectedEvent = {};\r\n                    }\r\n                } else {\r\n                    vm.selectedEvent = event;\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * END Selects\r\n         */\r\n\r\n\r\n        /**\r\n         * Format data\r\n         */\r\n         var resultFormat = function(items) {\r\n             angular.forEach(items, function(item) {\r\n                 if (item.hour !== null) {\r\n                     item.hour_format = moment(item.hour, \"HH:mm:ss\").format(\"h:mm A\");\r\n                 } else {\r\n                     item.hour_format = \"No disponible\";\r\n                 }\r\n             });\r\n\r\n             return items;\r\n         };\r\n\r\n         var findObject = function(array, func) {\r\n            var object = null;\r\n            for (var i = 0; i <= array.length -1; i++) {\r\n                var result = func(array[i]);\r\n                if (result === true) {\r\n                    return array[i];\r\n                }\r\n            }\r\n\r\n            return object;\r\n         };\r\n\r\n         var defaultData = function(date) {\r\n            zoneColapse = true;\r\n\r\n            // Default Date\r\n             vm.availability.date = date;\r\n\r\n             // Default num guests\r\n             var find_people = findObject(vm.form.people, function(item) {\r\n                return item.value == vm.selectedPeople.value;\r\n             });\r\n\r\n             if (find_people !== null) {\r\n                vm.selectPeople(find_people);\r\n             } else {\r\n                if (vm.form.people.length) {\r\n                    if (vm.form.people[1]) {\r\n                        vm.selectPeople(vm.form.people[1]);\r\n                    } else {\r\n                        vm.selectPeople(vm.form.people[0]);\r\n                    }\r\n                }\r\n             }\r\n\r\n             // Default zone\r\n             if (vm.form.zones.length === 1) {\r\n                vm.selectZone(vm.form.zones[0]);\r\n                zoneColapse = false;\r\n             } else {\r\n                var find_zone = findObject(vm.form.zones, function(item) {\r\n                   return item.id == vm.selectedZone.id;\r\n                });\r\n\r\n                if (find_zone !== null) {\r\n                   vm.selectZone(find_zone);\r\n                } else {\r\n                   if (vm.form.zones.length) {\r\n                       vm.selectZone(vm.form.zones[0]);\r\n                   }\r\n                }\r\n             }\r\n\r\n            // Default hour\r\n            vm.selectHour(utiles.filterHour(vm.form.hours, vm.availability.hour));\r\n\r\n            // Date detail\r\n             vm.infoDate = moment(date).format(\"dddd, D [de] MMMM\");\r\n\r\n             // vm.searchAvailability();\r\n         };\r\n         /**\r\n          * END Format data\r\n          */\r\n\r\n        var InitModule = function(date) {\r\n            vm.case = 1;\r\n            vm.loadingInfo = true;\r\n            vm.loadingData = true;\r\n            vm.message = \"Cargando ...\";\r\n\r\n            availabilityService.getFormatAvailability(date)\r\n                .then(function(response) {\r\n                    vm.form = response.data.data;\r\n                    vm.daysDisabled = vm.form.daysDisabled;\r\n                    vm.date = new Date(vm.form.date.split(\"-\"));\r\n                    defaultData(vm.form.date);\r\n\r\n                    vm.loadingData = false;\r\n                }).catch(function() {\r\n                    vm.result.length = 0;\r\n                    vm.message = \"Elija otra opcion de busqueda\";\r\n                }).finally(function() {\r\n                    vm.loadingInfo = false;\r\n                });\r\n        };\r\n\r\n        vm.$watch(\"date\", function(newValue, oldValue) {\r\n            if (! moment(newValue).isSame(oldValue) && ! moment(vm.form.date).isSame(newValue)) {\r\n                var date = moment(vm.date).utc().format(\"YYYY-MM-DD\");\r\n                InitModule(date);\r\n            }\r\n        });\r\n\r\n        var searchTemporalReserve = function() {\r\n            var deferred = $q.defer();\r\n\r\n            if (base_url.has(\"edit\") ) {\r\n                deferred.reject();\r\n                return deferred.promise;\r\n            }\r\n\r\n            availabilityService.searchTemporalReserve()\r\n                .then(function(response) {\r\n                    vm.prevReserve = response.data.data;\r\n                    if (vm.prevReserve !== null) {\r\n                        vm.showPrev = true;\r\n                        vm.prevResToken = vm.prevReserve.reservation.token;\r\n                        deferred.resolve();\r\n                    } else {\r\n                        deferred.reject();\r\n                    }\r\n                }).catch(function(error) {\r\n                    deferred.reject();\r\n                });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        var cancelTemporalReservation = function() {\r\n            availabilityService.cancelTemporalReservation();\r\n        };\r\n\r\n        vm.closePrev = function() {\r\n            InitModule();\r\n            vm.showPrev = false;\r\n            cancelTemporalReservation();\r\n        };\r\n\r\n        vm.openPrev = function() {\r\n            redirect(vm.prevResToken);\r\n        };\r\n\r\n        vm.promotionDisplay = function(item, evt) {\r\n            vm.promotion.imageUrl = item.image ? \"url(\" + item.image + \")\" : null; \r\n            vm.promotion.description = item.description || null;\r\n            vm.promotion.display = true;\r\n            angular.element(document.querySelector(\"#event\")).css({top: evt.pageY - (vm.promotion.imageUrl ? 190 : 120) });\r\n        };\r\n\r\n        vm.promotionHide = function() {\r\n            vm.promotion.display = false;\r\n        };\r\n\r\n        vm.changeMonth = function(date_ini, month, year, instance, select) {\r\n            date_fin = moment(date_ini).endOf('months').format(\"YYYY-MM-DD\");\r\n\r\n            var search = {\r\n                date_ini: date_ini,\r\n                date_fin: date_fin\r\n            };\r\n\r\n            availabilityService.getDaysDisabled(search)\r\n                .then(function(response) {\r\n                    vm.daysDisabled = response.data.data;\r\n                }).finally(function(){\r\n                    instance.refreshView();\r\n                    if ( moment(date_ini).month() == moment(vm.date).month() ) {\r\n                        select(moment(vm.date).toDate());\r\n                    }\r\n                });\r\n        };\r\n\r\n        (function Init() {\r\n            searchTemporalReserve()\r\n                .catch(function() {\r\n                    InitModule();\r\n                });\r\n        })();\r\n\r\n    }]);","angular.module(\"App\")\r\n    .controller(\"confirmedCtrl\", [\"$scope\", \"$window\", \"$location\", \"availabilityService\", \"base_url\", function(vm, $window, $location, availabilityService, base_url) {\r\n \r\n        vm.cancel = function() {\r\n            availabilityService.cancelReservation(token)\r\n                .then(function() {\r\n                    redirect();\r\n                }).catch(function() {\r\n                    alert(\"Ocurrio un problema al intentar cancelar la reservacion, intentelo de nuevo por favor.\");\r\n                });\r\n        };\r\n\r\n        var redirect = function() {\r\n            $window.location.href = base_url.get(\"\");\r\n        };\r\n    }]);","angular.module(\"App\")\r\n    .controller(\"errorCtrl\", [\"$scope\", \"$timeout\", \"$window\", \"$location\", \"base_url\", function(vm, $timeout, $window, $location, base_url) {\r\n        $timeout(function() {\r\n            $window.location.href = base_url.get(\"\");\r\n        }, 3000);\r\n    }]);","angular.module(\"App\")\r\n    .controller(\"reservationCtrl\", [\"$scope\", \"$window\", \"$location\", \"availabilityService\", \"utiles\", \"base_url\", function(vm, $window, $location, service, utiles, base_url) {\r\n\r\n        vm.reservation= {};\r\n        vm.reservation.token = token;\r\n        vm.reservation.guest= {};\r\n        vm.reservation.guest_list = [];\r\n        vm.newGuest = \"\";\r\n\r\n        vm.years = [];\r\n        vm.months = [];\r\n        vm.days = [];\r\n\r\n        vm.errors = {};\r\n\r\n        vm.loading = false;\r\n\r\n        vm.addGuest =function(event) {\r\n            if (event.keyCode == 13 || event.keyCode == 32) {\r\n                if (vm.newGuest .trim().length > 2) {\r\n                    vm.reservation.guest_list.push(vm.newGuest .trim());\r\n                    vm.newGuest = \"\";\r\n                }\r\n            }\r\n        };\r\n\r\n        vm.removeGuest = function(i) {\r\n            vm.reservation.guest_list.splice(i, 1);\r\n        };\r\n\r\n        vm.clearErrors = function(key) {\r\n            if (Object.prototype.toString.call(vm.errors[key]) == \"[object Array]\") {\r\n                vm.errors[key].length = 0;\r\n            }\r\n        };\r\n\r\n        var redirect = function(key) {\r\n            $window.location.href = base_url.get(\"/confirmed?key=\" + key);\r\n        };\r\n\r\n        vm.redirectBase = function() {\r\n            alert(\"El tiempo para completar la reservacion a terminado.\");\r\n            $window.location.href = base_url.url();\r\n        };\r\n\r\n        vm.redirectBaseEdit = function() {\r\n            $window.location.href = base_url.getWithParam({edit: 1});\r\n        };\r\n\r\n        vm.save = function() {\r\n            vm.loading = true;\r\n            vm.errors = {};\r\n            service.saveReservation(vm.reservation)\r\n                .then(function(response) {\r\n                    redirect(response.data.data);\r\n                }).catch(function(error) {\r\n                    console.log(error);\r\n                    if (error.data === null || error.status == 500) {\r\n                        vm.loading = false;\r\n                        return alert(\"Ocurrio un problema vuelva a intentarlo.\");\r\n                    }\r\n                    vm.errors = error.data.data;\r\n                    vm.loading = false;\r\n                });\r\n        };\r\n\r\n        var runYear = function() {\r\n            y = 2000;\r\n            while (y-- > 1940) {\r\n                vm.years.push(y);\r\n            }\r\n        };\r\n\r\n        var runMonth = function() {\r\n            vm.months = [\r\n                { id: \"01\", label: \"Enero\" },\r\n                { id: \"02\", label: \"Febrero\" },\r\n                { id: \"03\", label: \"Marzo\" },\r\n                { id: \"04\", label: \"Abril\" },\r\n                { id: \"05\", label: \"Mayo\" },\r\n                { id: \"06\", label: \"Junio\" },\r\n                { id: \"07\", label: \"Julio\" },\r\n                { id: \"08\", label: \"Agosto\" },\r\n                { id: \"09\", label: \"Septiembre\" },\r\n                { id: \"10\", label: \"Octubre\" },\r\n                { id: \"11\", label: \"Noviembre\" },\r\n                { id: \"12\", label: \"Diciembre\" }\r\n            ];\r\n        };\r\n\r\n        vm.changeMonth = function(mes) {\r\n            vm.days.length = 0;\r\n\r\n            var j = 0;\r\n\r\n            if (mes === \"\"){\r\n                k = 0;\r\n            } else if (mes == 2){\r\n                k = 28;\r\n            } else if (mes == 4 || mes== 6 || mes == 9 || mes == 11) {\r\n                k = 30;\r\n            } else {\r\n                k = 31;\r\n            }\r\n\r\n            while (j++ < k) {\r\n                if (j.toString().length === 1) {\r\n                    vm.days.push(\"0\" + j.toString());\r\n                } else {\r\n                    vm.days.push(j.toString());\r\n                }\r\n            }\r\n\r\n            if (vm.days.indexOf(vm.day) === -1) {\r\n                vm.day = undefined;\r\n            }\r\n\r\n            validDate();\r\n        };\r\n\r\n        vm.changeDay = function(mes) {\r\n            validDate();\r\n        };\r\n\r\n        vm.changeYear = function(mes) {\r\n            validDate();\r\n        };\r\n\r\n        var validDate = function () {\r\n            if (vm.year ===undefined || vm.month ===undefined || vm.day === undefined) {\r\n                vm.reservation.guest.birthdate = null;\r\n            } else {\r\n                var date = new Date(vm.year + \"/\" + vm.month + \"/\" + vm.day);\r\n\r\n                if ( isNaN(date.getTime()) ) {\r\n                    vm.reservation.guest.birthdate = null;\r\n                } else {\r\n                    vm.reservation.guest.birthdate = moment(date).format(\"YYYY-MM-DD\");\r\n                }\r\n            }\r\n        };\r\n\r\n        (function Init() {\r\n            runYear();\r\n            runMonth();\r\n        })();\r\n\r\n    }]);","angular.module(\"App\")\r\n    .directive(\"timeDown\", [\"$timeout\", \"$window\", \"$location\", function($timeout, $window, $location) {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                expire: \"=?\",\r\n                finally: \"&onFinish\"\r\n            },\r\n            template: '<span>{{  time }}</span>',\r\n            link: function(vm, element, attrs) {\r\n                var time, expire;\r\n\r\n                vm.$watch(\"expire\", function() {\r\n                    if (vm.expire !== undefined) {\r\n                        expire = ~~Number(vm.expire);\r\n                        time = moment.utc(expire);\r\n\r\n                        if (expire <= 0 ) {\r\n                            close();\r\n                        } else {\r\n                            watch();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                function watch() {\r\n                   vm.time = time.subtract(1, \"seconds\").format(\"mm:ss\");\r\n                   if (time.minute() === 0 && time.second() === 0) close();\r\n                   $timeout(watch, 1000);\r\n                }\r\n\r\n                function close() {\r\n                    vm.finally();\r\n                }\r\n            }\r\n        };\r\n    }]);","angular.module(\"App\")\r\n    .filter(\"dateBS\", function() {\r\n        return function(date) {\r\n            return moment(date).format(\"dddd, D [de] MMMM\");\r\n        };\r\n    })\r\n    .filter(\"timeBS\", function() {\r\n        return function(hour) {\r\n            return moment(hour, \"HH:mm:ss\").format(\"h:mm A\");\r\n        };\r\n    })\r\n    .filter(\"fullDateBS\", function() {\r\n        return function(date_time) {\r\n            return moment(date_time).format(\"dddd, D [de] MMM YYYY [a las] h:mm A\");\r\n        };\r\n    })\r\n    .filter('HtmlToText', function() {\r\n      return function(text) {\r\n        return  text ? String(text).replace(/<[^>]+>/gm, '') : '';\r\n      };\r\n    });","angular.module(\"App\")\r\n    .factory(\"availabilityService\", [\"$http\", \"base_url\",function($http, base_url) {     \r\n        return {\r\n            getFormatAvailability: function(date) {\r\n                return $http.get(base_url.url( \"/api/availability/formatAvailability\"), { params: {date: date}});\r\n            },\r\n            getAvailability: function(data) {\r\n                return $http.get(base_url.url() + \"/api/availability/basic\", {\r\n                    params: {\r\n                        date: data.date,\r\n                        hour: data.hour.option,\r\n                        next_day: data.hour.next_day,\r\n                        num_guests: data.num_guests,\r\n                        zone_id: data.zone_id\r\n                    }\r\n                });\r\n            },\r\n            saveTemporalReserve: function(data) {\r\n                return $http.post(base_url.url(\"/api/reservationtemporal\"), data);\r\n            },\r\n            saveReservation: function(data) {\r\n                return $http.post(base_url.url(\"/api/table/reservation/w\"), data);\r\n            },\r\n            cancelReservation: function(reserveToken) {\r\n                return $http.post(base_url.url(\"/api/table/reservation/cancel/\" + reserveToken));\r\n            },\r\n            cancelTemporalReservation: function() {\r\n                return $http.delete(base_url.url(\"/api/reservationtemporal\"));\r\n            },\r\n            searchTemporalReserve: function() {\r\n                return $http.get(base_url.url(\"/api/reservationtemporal\"));\r\n            },\r\n            getDaysDisabled: function(data) {\r\n                return $http.get(base_url.url(\"/api/availability/daysdisabled\"), { params: data});\r\n            },\r\n        };\r\n    }])\r\n    .factory(\"utiles\", [function() {\r\n        return {\r\n            filterHour: function(hours, defaultItem) {\r\n                var timeDefault;\r\n\r\n                var now = moment().add((15 - (parseInt(moment().format(\"mm\")) % 15)), \"minutes\").second(0).millisecond(0);\r\n                var timeDefaultIsEstablished = false;\r\n\r\n                var defaultHour = defaultItem ? moment(defaultItem.option, \"HH:mm:ss\") : null;\r\n\r\n                angular.forEach(hours, function(hour) {\r\n                    if (!timeDefaultIsEstablished || defaultHour) {\r\n                        var hourTime = moment(hour.option, \"HH:mm:ss\");\r\n                        if (hourTime.isSameOrAfter(now) && !timeDefaultIsEstablished) {\r\n                            timeDefault = hour;\r\n                            timeDefaultIsEstablished = true;\r\n                        }\r\n                        if (hourTime.isSame(defaultHour)) {\r\n                            timeDefault = hour;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (!timeDefault) {\r\n                    if (hours.length > 0) {\r\n                        timeDefault = hours[hours.length - 1];\r\n                    }\r\n                }\r\n\r\n                return timeDefault;\r\n            }\r\n        };\r\n    }])\r\n    .factory(\"base_url\", [\"$location\", function($location) {\r\n        var _base_url = $location.protocol() + \"://\" + $location.host() + \"/w/\" + microsite;\r\n\r\n        var params = \"\";\r\n        var c = 0;\r\n        angular.forEach($location.search(), function(value, i) {\r\n            if (i !== \"edit\") {\r\n                params += (c === 0 ? \"\" : \"&\") + i + \"=\" + value;\r\n                c++;\r\n            }\r\n        });\r\n\r\n        params = params === \"\" ? \"\" : \"#/?\" + params;\r\n\r\n        return {\r\n            url: function(path) {\r\n                return _base_url + (path ? path : \"\");\r\n            },\r\n            get: function(path) {\r\n                return _base_url + path + params;\r\n            },\r\n            getWithParam: function(obj_params) {\r\n                var other_params = \"\";\r\n                angular.forEach(obj_params, function(value, i) {\r\n                    other_params += \"&\" + i + \"=\" + value;\r\n                });\r\n\r\n                return _base_url + (params === \"\" ?  \"#/?\" + other_params : params + other_params);\r\n            },\r\n            has: function(search) {\r\n                return $location.search()[search] !== undefined;\r\n            }\r\n        };\r\n    }]);","$(document).ready(function() {\r\n    $(\".header:not(.search)\").on(\"click\", function() {\r\n\r\n        var body = $(this).parent().find(\".body\");\r\n\r\n        var active = $($.grep($(\".row .body\"), function(element) {\r\n          return $(element).hasClass(\"active\");\r\n        }));\r\n\r\n        if ( !body.is(active) ) {\r\n                body.addClass(\"active\", 200);\r\n                active.removeClass(\"active\", 200);\r\n        }\r\n    });\r\n});\r\n\r\nvar obtenerIdMicrositio = function() {\r\n    var url = location.href;\r\n    var pos = url.indexOf(\"/w/\");\r\n    var id = url.substr(pos + 3);\r\n    var last_pos = id.indexOf(\"/\");\r\n    id = id.substr(0, last_pos);\r\n    return id;\r\n};"]}